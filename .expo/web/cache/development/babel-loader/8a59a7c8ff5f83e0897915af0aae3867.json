{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport styled, { createGlobalStyle } from 'styled-components';\nimport * as Yup from 'yup';\nvar schema = Yup.object().shape({\n  fullname: Yup.string().min(2, \"Seu nome é muito curto\").max(50, \"O nome precisa ter 50 ou menos caracteres\").required(\"Por favor, insira um nome\"),\n  email: Yup.string().email(\"Seu email está incorreto\").required(\"Por favor, insira o seu e-mail\"),\n  user: Yup.string().min(2, \"Seu usuario é muito curto\").max(20, \"O usuario precisa ter 20 ou menos caracteres\").required(\"Por favor, insira um usuario\"),\n  password: Yup.string().min(8, 'Password is too short - should be 8 chars minimum.').matches(/[a-zA-Z]/, 'Password can only contain Latin letters.').required('No password provided.')\n});\nimport { StyledContainer, FormField, GlobalStyle, Titles, Input, ButtonSubmit, FormStyle, InputErrorMessage } from \"../components/styles.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      verifyFullname = _useState2[0],\n      setVerifyFullname = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(GlobalStyle, {}), _jsxs(StyledContainer, {\n      children: [_jsxs(FormStyle, {\n        children: [_jsx(Image, {\n          style: styles.tinyLogo,\n          source: require(\"../assets/icon-kiskadee.png\")\n        }), _jsx(Titles, {\n          children: \"Crie sua conta\"\n        })]\n      }), _jsx(FormStyle, {\n        children: _jsx(Formik, {\n          validationSchema: schema,\n          initialValues: {\n            fullname: '',\n            email: '',\n            user: '',\n            password: ''\n          },\n          onSubmit: function onSubmit(values, _ref) {\n            var setSubmitting = _ref.setSubmitting;\n            var timeOut = setTimeout(function () {\n              console.log(values);\n              setSubmitting(false);\n              clearTimeout(timeOut);\n            }, 1000);\n          },\n          children: function children(props) {\n            return _jsxs(\"form\", {\n              name: \"contact\",\n              method: \"post\",\n              onSubmit: props.handleSubmit,\n              children: [_jsx(Input, {\n                name: \"fullname\",\n                type: \"text\",\n                placeholder: \"nome\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.fullname\n              }), props.errors.fullname && _jsx(InputErrorMessage, {\n                id: \"feedback\",\n                children: props.errors.fullname\n              }), console.log(props.values), _jsx(Input, {\n                autoComplete: \"email\",\n                name: \"email\",\n                type: \"text\",\n                placeholder: \"email\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.email\n              }), props.errors.email && _jsx(InputErrorMessage, {\n                id: \"feedback\",\n                children: props.errors.email\n              }), _jsx(Input, {\n                name: \"user\",\n                type: \"text\",\n                placeholder: \"usuario\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.user\n              }), props.errors.user && _jsx(InputErrorMessage, {\n                id: \"feedback\",\n                children: props.errors.user\n              }), _jsx(Input, {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"senha\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.password\n              }), props.errors.password && _jsx(InputErrorMessage, {\n                id: \"feedback\",\n                children: props.errors.password\n              })]\n            });\n          }\n        })\n      }), _jsx(FormStyle, {\n        children: _jsx(ButtonSubmit, {\n          type: \"submit\",\n          children: \"Avan\\xE7ar\"\n        })\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tinyLogo: {\n    width: 40,\n    height: 40,\n    margin: '30px'\n  }\n});","map":{"version":3,"sources":["/home/foxy/projetos/kiskadee-react-native/screens/Signup.js"],"names":["React","useState","useEffect","StatusBar","Formik","Field","Form","ErrorMessage","styled","createGlobalStyle","Yup","schema","object","shape","fullname","string","min","max","required","email","user","password","matches","StyledContainer","FormField","GlobalStyle","Titles","Input","ButtonSubmit","FormStyle","InputErrorMessage","SignUp","verifyFullname","setVerifyFullname","styles","container","tinyLogo","require","values","setSubmitting","timeOut","setTimeout","console","log","clearTimeout","props","handleSubmit","handleChange","handleBlur","errors","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport styled, {createGlobalStyle} from 'styled-components';\n\nimport * as Yup from 'yup';\n\nconst schema = Yup.object().shape({\n  fullname: Yup.string()\n    .min(2, \"Seu nome é muito curto\")\n    .max(50, \"O nome precisa ter 50 ou menos caracteres\")\n    .required(\"Por favor, insira um nome\"),\n  email: Yup.string()\n    .email(\"Seu email está incorreto\")\n    .required(\"Por favor, insira o seu e-mail\"),\n  user: Yup.string()\n    .min(2, \"Seu usuario é muito curto\")\n    .max(20, \"O usuario precisa ter 20 ou menos caracteres\")\n    .required(\"Por favor, insira um usuario\"),\n  password: Yup.string()\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n    .required('No password provided.') \n})\n\nimport { \n  StyledContainer, \n  FormField, \n  GlobalStyle, \n  Titles, \n  Input, \n  ButtonSubmit,\n  FormStyle,\n  InputErrorMessage\n} from '../components/styles.js'\n\n\nexport default function SignUp() {\n\n  const [verifyFullname, setVerifyFullname] = useState()\n\n    return (\n      <View style={styles.container}>\n\n        <GlobalStyle/>\n\n        <StyledContainer>\n\n<FormStyle>\n\n        <Image\n        style={styles.tinyLogo}\n        source={require('../assets/icon-kiskadee.png')}\n      />\n\n            <Titles>Crie sua conta</Titles>\n\n            </FormStyle>\n      <FormStyle>\n\n            <Formik\n            validationSchema={schema}\n\n            initialValues={{\n              fullname: '',\n              email: '',\n              user: '',\n              password: ''\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              const timeOut = setTimeout(() => {\n                console.log(values);\n                setSubmitting(false);\n    \n                clearTimeout(timeOut);\n              }, 1000);\n            }}\n            > \n              {props => (\n\n                <form name=\"contact\" method=\"post\" onSubmit={props.handleSubmit}>\n             \n                  <Input \n                  name=\"fullname\" \n                  type=\"text\" \n                  placeholder='nome' \n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.fullname}\n              \n                  />\n                  {props.errors.fullname && <InputErrorMessage id=\"feedback\">{props.errors.fullname}</InputErrorMessage>}\n                  {console.log(props.values)}\n\n                  < Input \n                  autoComplete=\"email\" \n                  name=\"email\" \n                  type=\"text\" \n                  placeholder='email' \n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.email}\n                  />\n                  {props.errors.email && <InputErrorMessage id=\"feedback\">{props.errors.email}</InputErrorMessage>}\n\n                  <Input \n                  name=\"user\" \n                  type=\"text\" \n                  placeholder='usuario' \n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.user}\n                  />\n                  {props.errors.user && <InputErrorMessage id=\"feedback\">{props.errors.user}</InputErrorMessage>}\n\n                  <Input \n                  name=\"password\" \n                  type=\"password\" \n                  placeholder='senha'\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.password}\n                  />\n                  {props.errors.password && <InputErrorMessage id=\"feedback\">{props.errors.password}</InputErrorMessage>}\n\n\n                </form>\n              )}\n            </Formik>\n\n</FormStyle>\n\n            <FormStyle>\n\n            <ButtonSubmit type='submit'>Avançar</ButtonSubmit>\n            \n            </FormStyle>\n            </StyledContainer>\n\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    tinyLogo: {\n      width: 40,\n      height: 40,\n      margin: '30px'\n    }\n  });\n  "]},"metadata":{},"sourceType":"module"}